#!/busybox ash

set -e
ROOT=/dev/sdb

alias busybox="/busybox"
alias modprobe="/modprobe"

busybox mkdir -p /proc /sys /dev /tmp /etc
busybox mount -t proc proc /proc
# now busybox standalone mode should work
mount -t sysfs sys /sys
mount -t devtmpfs dev /dev
mount -t tmpfs tmpfs /tmp

find /sys/devices -name modalias -type f -print0 | xargs -0 /busybox sort -u | xargs /modprobe -ab 2>/dev/null || true

modprobe squashfs || true
MODULES_PATH="/lib/modules/$(busybox uname -r)"
mkdir -p /mnt/modules"$MODULES_PATH"
mount -t squashfs /dev/sda /mnt/modules"$MODULES_PATH"

find /sys/devices -name modalias -type f -print0 | xargs -0 /busybox sort -u | xargs /modprobe -d /mnt/modules -ab 2>/dev/null || true

alias modprobe="/modprobe -d /mnt/modules"

IFS='
'
set -- $(xargs /busybox printf '%s\n' </proc/cmdline)
for i; do
	case "$i" in
	hostname=*)
		HOSTNAME="${i#hostname=}"
		;;
	ifaddr=*)
		IFADDR="${i#ifaddr=}"
		;;
	gwaddr=*)
		GWADDR="${i#gwaddr=}"
		;;
	nameserver=*)
		NAMESERVER="${i#nameserver=}"
		;;
	data=*)
		DATA="${i#data=}"
		;;
	datatype=*)
		DATATYPE="${i#datatype=}"
		;;
	root=*)
		ROOT="${i#root=}"
		;;
	init=*)
		_CMDLINE_INIT="${i#init=}"
		;;
	user=*)
		_CMDLINE_UIDGID="${i#user=}"
		;;
	workdir=*)
		_CMDLINE_WORKDIR="${i#workdir=}"
	esac
done

HOSTNAME=${HOSTNAME:-$(head -c 6 /dev/urandom | hexdump -e '6/1 "%02x"')}
echo "$HOSTNAME" > /etc/hostname
hostname "$HOSTNAME"

modprobe btrfs || true
mkdir -p /mnt/lower /mnt/data /mnt/merged
mount "$ROOT" /mnt/lower
if [ -n "$DATA" ]; then
	if [ -n "$DATATYPE" ];then
		modprobe "$DATATYPE" || true
		mount -t "$DATATYPE" "$DATA" /mnt/data
	else
		mount "$DATA" /mnt/data
	fi
else
	mount -t tmpfs tmpfs /mnt/data
fi
mkdir -p /mnt/data/work /mnt/data/upper
modprobe overlay || true
mount -t overlay -olowerdir=/mnt/lower,upperdir=/mnt/data/upper,workdir=/mnt/data/work overlay /mnt/merged

ip l set eth0 up
if [ -n "$IFADDR" ]; then
	ip a add "$IFADDR" dev eth0
	[ -n "$GWADDR" ] && ip r add default via "$GWADDR" dev eth0
	if [ -n "$NAMESERVER" ]; then
		echo "nameserver $NAMESERVER" > /etc/resolv.conf
	fi
else
	modprobe af_packet || true
	udhcpc -fqs /udhcpc.script
fi

mkdir -p /mnt/merged/etc
touch /mnt/merged/etc/resolv.conf
mount -o bind /etc/resolv.conf /mnt/merged/etc/resolv.conf
touch /mnt/merged/etc/hostname
mount -o bind /etc/hostname /mnt/merged/etc/hostname

umount /mnt/lower
umount /tmp

mkdir -p /mnt/merged/dev /mnt/merged/sys /mnt/merged/proc /mnt/merged"$MODULES_PATH"
mount -o move /mnt/modules"$MODULES_PATH" /mnt/merged"$MODULES_PATH"

# /.c2v/init sets real target (entrypoint + cmd) in $@, set a traditional init as default here
set -- /sbin/init
. /mnt/merged/.c2v/init

[ -n "$_CMDLINE_INIT" ] && set -- $(echo "$_CMDLINE_INIT" | xargs /busybox printf '%s\n')
[ -n "$_CMDLINE_UIDGID" ] && _UIDGID="$_CMDLINE_UIDGID"
[ -n "$_CMDLINE_WORKDIR" ] && _WORKDIR="$(echo "$_CMDLINE_WORKDIR" | xargs /busybox printf '%s\n')"

# we do not need setuidgid if 0:0
[ "$_UIDGID" = '0' ] || [ "$_UIDGID" = '0:0' ] && unset _UIDGID
# we do not need chdir if /
[ "$_WORKDIR" = '/' ] && unset _WORKDIR

if [ -n "$_UIDGID" ] || [ -n "$_WORKDIR" ] ; then
	touch /mnt/merged/.c2v/chdir-setuidgid
	# See mount(8)
	mount -o bind /chdir-setuidgid /mnt/merged/.c2v/chdir-setuidgid
	mount -o remount,bind,ro /chdir-setuidgid /mnt/merged/.c2v/chdir-setuidgid
	set -- /.c2v/chdir-setuidgid "${_WORKDIR:-/}" "${_UIDGID:-0}" "$@"
fi

mount -o move /dev /mnt/merged/dev
mount -o move /sys /mnt/merged/sys
mount -o move /proc /mnt/merged/proc

exec /busybox switch_root /mnt/merged/ "$@"
