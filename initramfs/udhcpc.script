#!/busybox ash
# udhcpc script edited by Tim Riker <Tim@Rikers.org>

alias busybox="/busybox"

RESOLV_CONF="/etc/resolv.conf"

[ -n "$1" ] || { echo "Error: should be called from udhcpc"; exit 1; }

NETMASK=""
[ -n "$subnet" ] && NETMASK="/$subnet"
BROADCAST="broadcast +"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"

case "$1" in
	deconfig)
		echo "Clearing IP addresses on $interface, upping it"
		busybox ip -4 addr flush dev $interface
		busybox ip link set dev $interface up
		;;

	renew|bound)
		echo "Setting IP address $ip on $interface"
		busybox ip addr add $ip$NETMASK $BROADCAST dev $interface

		if [ -n "$router" ] ; then
			echo "Deleting routers"
			while busybox ip route del default dev $interface ; do
				:
			done

			metric=0
			for i in $router ; do
				echo "Adding router $i"
				if [ "$subnet" = "255.255.255.255" ]; then
						# special case for /32 subnets:
						# /32 instructs kernel to always use routing for all outgoing packets
						# (they can never be sent to local subnet - there is no local subnet for /32).
						# Used in datacenters, avoids the need for private ip-addresses between two hops.
					busybox ip route add $i dev $interface
				fi
				busybox ip route add default via $i dev $interface metric $((metric++))
			done
		fi

		echo "Recreating $RESOLV_CONF"
		tmpfile="$RESOLV_CONF-$$"
		> "$tmpfile"
		[ -n "$domain" ] && echo "search $domain" >> "$tmpfile"
		for i in $dns ; do
			echo " Adding DNS server $i"
			echo "nameserver $i" >> "$tmpfile"
		done
		busybox mv "$tmpfile" "$RESOLV_CONF"
		;;
esac

exit 0
